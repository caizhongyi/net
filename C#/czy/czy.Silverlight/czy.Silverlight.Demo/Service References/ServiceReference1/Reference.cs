//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace czy.Silverlight.Demo.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTotalPagers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetTotalPagers(int PageSize, System.AsyncCallback callback, object asyncState);
        
        long EndGetTotalPagers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPagedUserInfoInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetPagedUserInfoInfo(int PageSize, int CurrentPage, System.AsyncCallback callback, object asyncState);
        
        czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement EndGetPagedUserInfoInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : czy.Silverlight.Demo.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalPagersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalPagersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPagedUserInfoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPagedUserInfoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<czy.Silverlight.Demo.ServiceReference1.WebService1Soap>, czy.Silverlight.Demo.ServiceReference1.WebService1Soap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalPagersDelegate;
        
        private EndOperationDelegate onEndGetTotalPagersDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalPagersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPagedUserInfoInfoDelegate;
        
        private EndOperationDelegate onEndGetPagedUserInfoInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPagedUserInfoInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<GetTotalPagersCompletedEventArgs> GetTotalPagersCompleted;
        
        public event System.EventHandler<GetPagedUserInfoInfoCompletedEventArgs> GetPagedUserInfoInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult czy.Silverlight.Demo.ServiceReference1.WebService1Soap.BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string czy.Silverlight.Demo.ServiceReference1.WebService1Soap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult czy.Silverlight.Demo.ServiceReference1.WebService1Soap.BeginGetTotalPagers(int PageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalPagers(PageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long czy.Silverlight.Demo.ServiceReference1.WebService1Soap.EndGetTotalPagers(System.IAsyncResult result) {
            return base.Channel.EndGetTotalPagers(result);
        }
        
        private System.IAsyncResult OnBeginGetTotalPagers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PageSize = ((int)(inValues[0]));
            return ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).BeginGetTotalPagers(PageSize, callback, asyncState);
        }
        
        private object[] OnEndGetTotalPagers(System.IAsyncResult result) {
            long retVal = ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).EndGetTotalPagers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalPagersCompleted(object state) {
            if ((this.GetTotalPagersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalPagersCompleted(this, new GetTotalPagersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalPagersAsync(int PageSize) {
            this.GetTotalPagersAsync(PageSize, null);
        }
        
        public void GetTotalPagersAsync(int PageSize, object userState) {
            if ((this.onBeginGetTotalPagersDelegate == null)) {
                this.onBeginGetTotalPagersDelegate = new BeginOperationDelegate(this.OnBeginGetTotalPagers);
            }
            if ((this.onEndGetTotalPagersDelegate == null)) {
                this.onEndGetTotalPagersDelegate = new EndOperationDelegate(this.OnEndGetTotalPagers);
            }
            if ((this.onGetTotalPagersCompletedDelegate == null)) {
                this.onGetTotalPagersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalPagersCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalPagersDelegate, new object[] {
                        PageSize}, this.onEndGetTotalPagersDelegate, this.onGetTotalPagersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult czy.Silverlight.Demo.ServiceReference1.WebService1Soap.BeginGetPagedUserInfoInfo(int PageSize, int CurrentPage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPagedUserInfoInfo(PageSize, CurrentPage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement czy.Silverlight.Demo.ServiceReference1.WebService1Soap.EndGetPagedUserInfoInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPagedUserInfoInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetPagedUserInfoInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PageSize = ((int)(inValues[0]));
            int CurrentPage = ((int)(inValues[1]));
            return ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).BeginGetPagedUserInfoInfo(PageSize, CurrentPage, callback, asyncState);
        }
        
        private object[] OnEndGetPagedUserInfoInfo(System.IAsyncResult result) {
            czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement retVal = ((czy.Silverlight.Demo.ServiceReference1.WebService1Soap)(this)).EndGetPagedUserInfoInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPagedUserInfoInfoCompleted(object state) {
            if ((this.GetPagedUserInfoInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPagedUserInfoInfoCompleted(this, new GetPagedUserInfoInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPagedUserInfoInfoAsync(int PageSize, int CurrentPage) {
            this.GetPagedUserInfoInfoAsync(PageSize, CurrentPage, null);
        }
        
        public void GetPagedUserInfoInfoAsync(int PageSize, int CurrentPage, object userState) {
            if ((this.onBeginGetPagedUserInfoInfoDelegate == null)) {
                this.onBeginGetPagedUserInfoInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPagedUserInfoInfo);
            }
            if ((this.onEndGetPagedUserInfoInfoDelegate == null)) {
                this.onEndGetPagedUserInfoInfoDelegate = new EndOperationDelegate(this.OnEndGetPagedUserInfoInfo);
            }
            if ((this.onGetPagedUserInfoInfoCompletedDelegate == null)) {
                this.onGetPagedUserInfoInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPagedUserInfoInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPagedUserInfoInfoDelegate, new object[] {
                        PageSize,
                        CurrentPage}, this.onEndGetPagedUserInfoInfoDelegate, this.onGetPagedUserInfoInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override czy.Silverlight.Demo.ServiceReference1.WebService1Soap CreateChannel() {
            return new WebService1SoapClientChannel(this);
        }
        
        private class WebService1SoapClientChannel : ChannelBase<czy.Silverlight.Demo.ServiceReference1.WebService1Soap>, czy.Silverlight.Demo.ServiceReference1.WebService1Soap {
            
            public WebService1SoapClientChannel(System.ServiceModel.ClientBase<czy.Silverlight.Demo.ServiceReference1.WebService1Soap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTotalPagers(int PageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetTotalPagers", _args, callback, asyncState);
                return _result;
            }
            
            public long EndGetTotalPagers(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("GetTotalPagers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPagedUserInfoInfo(int PageSize, int CurrentPage, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = PageSize;
                _args[1] = CurrentPage;
                System.IAsyncResult _result = base.BeginInvoke("GetPagedUserInfoInfo", _args, callback, asyncState);
                return _result;
            }
            
            public czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement EndGetPagedUserInfoInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement _result = ((czy.Silverlight.Demo.ServiceReference1.ArrayOfXElement)(base.EndInvoke("GetPagedUserInfoInfo", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "4.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
