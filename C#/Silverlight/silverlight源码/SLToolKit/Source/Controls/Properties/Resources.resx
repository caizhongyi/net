<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid maximum drop down height value '{0}'. The value must be greater than or equal to zero.</value>
    <comment>Exception thrown when the MaxDropDownHeight dependency property is seto to a value that is negative.</comment>
  </data>
  <data name="AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid MinimumPopulateDelay value '{0}'. The value must be greater than or equal to zero.</value>
    <comment>Exception thrown when the MinimumPopulateDelay dependency property is changed to a negative value.</comment>
  </data>
  <data name="AutoComplete_OnSearchModePropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid SearchMode enumeration value. The value must be one of the defined AutoCompleteSearchMode values to be accepted.</value>
    <comment>Exception thrown when the SearchMode dependency property is set to a value that does not pass the enum validation step in the property changed handler.</comment>
  </data>
  <data name="AutoComplete_OnSearchTextPropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SearchText.</value>
    <comment>Exception thrown when the SearchText property is improperly set.</comment>
  </data>
  <data name="AutoComplete_OnSelectedItemPropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SelectedItem.</value>
    <comment>Exception thrown when the SelectedItem property is improperly set.</comment>
  </data>
  <data name="Automation_OperationCannotBePerformed" xml:space="preserve">
    <value>Cannot perform operation.</value>
    <comment>Exception thrown by automation peers.</comment>
  </data>
  <data name="DockPanel_OnDockPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid Dock value '{0}'.</value>
    <comment>Exception thrown when the Dock attached property is provided an invalid value.</comment>
  </data>
  <data name="Expander_OnExpandDirectionPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid ExpandDirection value '{0}'.</value>
    <comment>Exception thrown when the ExpandDirection property is provided an invalid value.</comment>
  </data>
  <data name="ParameterCollection_EnsureCanChangeCollection_IsReadOnly" xml:space="preserve">
    <value>ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance.</value>
    <comment>Exception thrown when a ParameterCollection used for ObjectDataProvider.ConstructorParameters is modified but the ObjectDataProvider.ObjectInstance was user specified.</comment>
  </data>
  <data name="ResolveElementNameEventArgs_ctor_ElementNameEmpty" xml:space="preserve">
    <value>The elementName should not be empty.</value>
    <comment>Exception thrown when an empty elementName is provided.</comment>
  </data>
  <data name="RoutedPropertyChangingEventArgs_CancelSet_InvalidOperation" xml:space="preserve">
    <value>The RoutedPropertyChangingEvent cannot be canceled!</value>
    <comment>Exception thrown when setting Cancel property while IsCancelable is false.</comment>
  </data>
  <data name="TreeViewItem_OnHasItemsPropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property HasItems.</value>
    <comment>Exception thrown when the HasItems property is improperly set.</comment>
  </data>
  <data name="TreeViewItem_OnIsSelectionActivePropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property IsSelectionActive.</value>
    <comment>Exception thrown when the IsSelectionActive property is improperly set.</comment>
  </data>
  <data name="TreeView_OnSelectedItemPropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SelectedItem.</value>
    <comment>Exception thrown when the SelectedItem property is improperly set.</comment>
  </data>
  <data name="TreeView_OnSelectedValuePropertyChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SelectedValue.</value>
    <comment>Exception thrown when the SelectedValue property is improperly set.</comment>
  </data>
  <data name="TypeConverters_ConvertFrom_CannotConvertFromType" xml:space="preserve">
    <value>'{0}' cannot convert from '{1}'.</value>
    <comment>Exception thrown when a type converter is asked to convert something it cannot.</comment>
  </data>
  <data name="TypeConverters_Convert_CannotConvert" xml:space="preserve">
    <value>'{0}' is unable to convert '{1}' to '{2}'.</value>
    <comment>Exception thrown when a type converter fails to convert a value to another type.</comment>
  </data>
  <data name="Viewbox_OnApplyTemplate_OnlyOnce" xml:space="preserve">
    <value>The template can only be applied one time.</value>
    <comment>Exception thrown when someone atttemps to change from Viewbox's default ControlTemplate.</comment>
  </data>
  <data name="Viewbox_OnStretchDirectionPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid StretchDirection value '{0}'.</value>
    <comment>Exception thrown when the StretchDirection property is provided an invalid value.</comment>
  </data>
  <data name="Viewbox_OnStretchPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid Stretch value '{0}'.</value>
    <comment>Exception thrown when the Stretch property is provided an invalid value.</comment>
  </data>
  <data name="WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid length value '{0}'.</value>
    <comment>Exception thrown when the ItemWith or ItemHeight properties are provided an invalid value.</comment>
  </data>
  <data name="WrapPanel_OnOrientationPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid Orientation value '{0}'.</value>
    <comment>Exception thrown when the Orientation property is provided an invalid value.</comment>
  </data>
</root>