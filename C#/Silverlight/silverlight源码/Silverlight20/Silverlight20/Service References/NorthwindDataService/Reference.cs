//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 原始文件名:
// 生成日期: 2009-2-20 9:03:50
namespace Silverlight20.NorthwindDataService
{
    
    /// <summary>
    /// 架构中不存在 NorthwindEntities 的注释。
    /// </summary>
    public partial class NorthwindEntities : global::System.Data.Services.Client.DataServiceContext
    {
        /// <summary>
        /// 初始化新的 NorthwindEntities 对象。
        /// </summary>
        public NorthwindEntities(global::System.Uri serviceRoot) : 
                base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// 因为在 Visual Studio 中为此服务引用配置的
        /// 命名空间与在服务器架构中指示的命名空间不同，所以
        /// 使用类型映射器在这两者之间进行映射。
        /// </summary>
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("NorthwindModel", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("Silverlight20.NorthwindDataService", typeName.Substring(14)), true);
            }
            return null;
        }
        /// <summary>
        /// 因为在 Visual Studio 中为此服务引用配置的
        /// 命名空间与在服务器架构中指示的命名空间不同，所以
        /// 使用类型映射器在这两者之间进行映射。
        /// </summary>
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("Silverlight20.NorthwindDataService", global::System.StringComparison.Ordinal))
            {
                return string.Concat("NorthwindModel.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// 架构中不存在 Categories 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Categories> Categories
        {
            get
            {
                if ((this._Categories == null))
                {
                    this._Categories = base.CreateQuery<Categories>("Categories");
                }
                return this._Categories;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Categories> _Categories;
        /// <summary>
        /// 架构中不存在 CustomerDemographics 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<CustomerDemographics> CustomerDemographics
        {
            get
            {
                if ((this._CustomerDemographics == null))
                {
                    this._CustomerDemographics = base.CreateQuery<CustomerDemographics>("CustomerDemographics");
                }
                return this._CustomerDemographics;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<CustomerDemographics> _CustomerDemographics;
        /// <summary>
        /// 架构中不存在 Customers 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Customers> Customers
        {
            get
            {
                if ((this._Customers == null))
                {
                    this._Customers = base.CreateQuery<Customers>("Customers");
                }
                return this._Customers;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Customers> _Customers;
        /// <summary>
        /// 架构中不存在 Employees 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Employees> Employees
        {
            get
            {
                if ((this._Employees == null))
                {
                    this._Employees = base.CreateQuery<Employees>("Employees");
                }
                return this._Employees;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Employees> _Employees;
        /// <summary>
        /// 架构中不存在 Order_Details 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Order_Details> Order_Details
        {
            get
            {
                if ((this._Order_Details == null))
                {
                    this._Order_Details = base.CreateQuery<Order_Details>("Order_Details");
                }
                return this._Order_Details;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Order_Details> _Order_Details;
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Orders> Orders
        {
            get
            {
                if ((this._Orders == null))
                {
                    this._Orders = base.CreateQuery<Orders>("Orders");
                }
                return this._Orders;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Orders> _Orders;
        /// <summary>
        /// 架构中不存在 Products 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Products> Products
        {
            get
            {
                if ((this._Products == null))
                {
                    this._Products = base.CreateQuery<Products>("Products");
                }
                return this._Products;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Products> _Products;
        /// <summary>
        /// 架构中不存在 Region 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Region> Region
        {
            get
            {
                if ((this._Region == null))
                {
                    this._Region = base.CreateQuery<Region>("Region");
                }
                return this._Region;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Region> _Region;
        /// <summary>
        /// 架构中不存在 Shippers 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Shippers> Shippers
        {
            get
            {
                if ((this._Shippers == null))
                {
                    this._Shippers = base.CreateQuery<Shippers>("Shippers");
                }
                return this._Shippers;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Shippers> _Shippers;
        /// <summary>
        /// 架构中不存在 Suppliers 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Suppliers> Suppliers
        {
            get
            {
                if ((this._Suppliers == null))
                {
                    this._Suppliers = base.CreateQuery<Suppliers>("Suppliers");
                }
                return this._Suppliers;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Suppliers> _Suppliers;
        /// <summary>
        /// 架构中不存在 Territories 的注释。
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Territories> Territories
        {
            get
            {
                if ((this._Territories == null))
                {
                    this._Territories = base.CreateQuery<Territories>("Territories");
                }
                return this._Territories;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Territories> _Territories;
        /// <summary>
        /// 架构中不存在 Categories 的注释。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
        /// <summary>
        /// 架构中不存在 CustomerDemographics 的注释。
        /// </summary>
        public void AddToCustomerDemographics(CustomerDemographics customerDemographics)
        {
            base.AddObject("CustomerDemographics", customerDemographics);
        }
        /// <summary>
        /// 架构中不存在 Customers 的注释。
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
        /// <summary>
        /// 架构中不存在 Employees 的注释。
        /// </summary>
        public void AddToEmployees(Employees employees)
        {
            base.AddObject("Employees", employees);
        }
        /// <summary>
        /// 架构中不存在 Order_Details 的注释。
        /// </summary>
        public void AddToOrder_Details(Order_Details order_Details)
        {
            base.AddObject("Order_Details", order_Details);
        }
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }
        /// <summary>
        /// 架构中不存在 Products 的注释。
        /// </summary>
        public void AddToProducts(Products products)
        {
            base.AddObject("Products", products);
        }
        /// <summary>
        /// 架构中不存在 Region 的注释。
        /// </summary>
        public void AddToRegion(Region region)
        {
            base.AddObject("Region", region);
        }
        /// <summary>
        /// 架构中不存在 Shippers 的注释。
        /// </summary>
        public void AddToShippers(Shippers shippers)
        {
            base.AddObject("Shippers", shippers);
        }
        /// <summary>
        /// 架构中不存在 Suppliers 的注释。
        /// </summary>
        public void AddToSuppliers(Suppliers suppliers)
        {
            base.AddObject("Suppliers", suppliers);
        }
        /// <summary>
        /// 架构中不存在 Territories 的注释。
        /// </summary>
        public void AddToTerritories(Territories territories)
        {
            base.AddObject("Territories", territories);
        }
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Categories 的注释。
    /// </summary>
    /// <KeyProperties>
    /// CategoryID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("CategoryID")]
    public partial class Categories
    {
        /// <summary>
        /// 创建新的 Categories 对象。
        /// </summary>
        /// <param name="categoryID">CategoryID 的初始值。</param>
        /// <param name="categoryName">CategoryName 的初始值。</param>
        public static Categories CreateCategories(int categoryID, string categoryName)
        {
            Categories categories = new Categories();
            categories.CategoryID = categoryID;
            categories.CategoryName = categoryName;
            return categories;
        }
        /// <summary>
        /// 架构中不存在属性 CategoryID 的注释。
        /// </summary>
        public int CategoryID
        {
            get
            {
                return this._CategoryID;
            }
            set
            {
                this.OnCategoryIDChanging(value);
                this._CategoryID = value;
                this.OnCategoryIDChanged();
            }
        }
        private int _CategoryID;
        partial void OnCategoryIDChanging(int value);
        partial void OnCategoryIDChanged();
        /// <summary>
        /// 架构中不存在属性 CategoryName 的注释。
        /// </summary>
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                this.OnCategoryNameChanging(value);
                this._CategoryName = value;
                this.OnCategoryNameChanged();
            }
        }
        private string _CategoryName;
        partial void OnCategoryNameChanging(string value);
        partial void OnCategoryNameChanged();
        /// <summary>
        /// 架构中不存在属性 Description 的注释。
        /// </summary>
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                this.OnDescriptionChanging(value);
                this._Description = value;
                this.OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        /// <summary>
        /// 架构中不存在属性 Picture 的注释。
        /// </summary>
        public byte[] Picture
        {
            get
            {
                if ((this._Picture != null))
                {
                    return ((byte[])(this._Picture.Clone()));
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnPictureChanging(value);
                this._Picture = value;
                this.OnPictureChanged();
            }
        }
        private byte[] _Picture;
        partial void OnPictureChanging(byte[] value);
        partial void OnPictureChanged();
        /// <summary>
        /// 架构中不存在 Products 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Products> Products
        {
            get
            {
                return this._Products;
            }
            set
            {
                if ((value != null))
                {
                    this._Products = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Products> _Products = new global::System.Collections.ObjectModel.Collection<Products>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.CustomerDemographics 的注释。
    /// </summary>
    /// <KeyProperties>
    /// CustomerTypeID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("CustomerTypeID")]
    public partial class CustomerDemographics
    {
        /// <summary>
        /// 创建新的 CustomerDemographics 对象。
        /// </summary>
        /// <param name="customerTypeID">CustomerTypeID 的初始值。</param>
        public static CustomerDemographics CreateCustomerDemographics(string customerTypeID)
        {
            CustomerDemographics customerDemographics = new CustomerDemographics();
            customerDemographics.CustomerTypeID = customerTypeID;
            return customerDemographics;
        }
        /// <summary>
        /// 架构中不存在属性 CustomerDesc 的注释。
        /// </summary>
        public string CustomerDesc
        {
            get
            {
                return this._CustomerDesc;
            }
            set
            {
                this.OnCustomerDescChanging(value);
                this._CustomerDesc = value;
                this.OnCustomerDescChanged();
            }
        }
        private string _CustomerDesc;
        partial void OnCustomerDescChanging(string value);
        partial void OnCustomerDescChanged();
        /// <summary>
        /// 架构中不存在属性 CustomerTypeID 的注释。
        /// </summary>
        public string CustomerTypeID
        {
            get
            {
                return this._CustomerTypeID;
            }
            set
            {
                this.OnCustomerTypeIDChanging(value);
                this._CustomerTypeID = value;
                this.OnCustomerTypeIDChanged();
            }
        }
        private string _CustomerTypeID;
        partial void OnCustomerTypeIDChanging(string value);
        partial void OnCustomerTypeIDChanged();
        /// <summary>
        /// 架构中不存在 Customers 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Customers> Customers
        {
            get
            {
                return this._Customers;
            }
            set
            {
                if ((value != null))
                {
                    this._Customers = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Customers> _Customers = new global::System.Collections.ObjectModel.Collection<Customers>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Customers 的注释。
    /// </summary>
    /// <KeyProperties>
    /// CustomerID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("CustomerID")]
    public partial class Customers
    {
        /// <summary>
        /// 创建新的 Customers 对象。
        /// </summary>
        /// <param name="companyName">CompanyName 的初始值。</param>
        /// <param name="customerID">CustomerID 的初始值。</param>
        public static Customers CreateCustomers(string companyName, string customerID)
        {
            Customers customers = new Customers();
            customers.CompanyName = companyName;
            customers.CustomerID = customerID;
            return customers;
        }
        /// <summary>
        /// 架构中不存在属性 Address 的注释。
        /// </summary>
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        /// <summary>
        /// 架构中不存在属性 City 的注释。
        /// </summary>
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// 架构中不存在属性 CompanyName 的注释。
        /// </summary>
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
        /// <summary>
        /// 架构中不存在属性 ContactName 的注释。
        /// </summary>
        public string ContactName
        {
            get
            {
                return this._ContactName;
            }
            set
            {
                this.OnContactNameChanging(value);
                this._ContactName = value;
                this.OnContactNameChanged();
            }
        }
        private string _ContactName;
        partial void OnContactNameChanging(string value);
        partial void OnContactNameChanged();
        /// <summary>
        /// 架构中不存在属性 ContactTitle 的注释。
        /// </summary>
        public string ContactTitle
        {
            get
            {
                return this._ContactTitle;
            }
            set
            {
                this.OnContactTitleChanging(value);
                this._ContactTitle = value;
                this.OnContactTitleChanged();
            }
        }
        private string _ContactTitle;
        partial void OnContactTitleChanging(string value);
        partial void OnContactTitleChanged();
        /// <summary>
        /// 架构中不存在属性 Country 的注释。
        /// </summary>
        public string Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                this.OnCountryChanging(value);
                this._Country = value;
                this.OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        /// <summary>
        /// 架构中不存在属性 CustomerID 的注释。
        /// </summary>
        public string CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnCustomerIDChanging(value);
                this._CustomerID = value;
                this.OnCustomerIDChanged();
            }
        }
        private string _CustomerID;
        partial void OnCustomerIDChanging(string value);
        partial void OnCustomerIDChanged();
        /// <summary>
        /// 架构中不存在属性 Fax 的注释。
        /// </summary>
        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                this.OnFaxChanging(value);
                this._Fax = value;
                this.OnFaxChanged();
            }
        }
        private string _Fax;
        partial void OnFaxChanging(string value);
        partial void OnFaxChanged();
        /// <summary>
        /// 架构中不存在属性 Phone 的注释。
        /// </summary>
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                this.OnPhoneChanging(value);
                this._Phone = value;
                this.OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        /// <summary>
        /// 架构中不存在属性 PostalCode 的注释。
        /// </summary>
        public string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                this.OnPostalCodeChanging(value);
                this._PostalCode = value;
                this.OnPostalCodeChanged();
            }
        }
        private string _PostalCode;
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        /// <summary>
        /// 架构中不存在属性 Region 的注释。
        /// </summary>
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                this.OnRegionChanging(value);
                this._Region = value;
                this.OnRegionChanged();
            }
        }
        private string _Region;
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Orders> Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                if ((value != null))
                {
                    this._Orders = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Orders> _Orders = new global::System.Collections.ObjectModel.Collection<Orders>();
        /// <summary>
        /// 架构中不存在 CustomerDemographics 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<CustomerDemographics> CustomerDemographics
        {
            get
            {
                return this._CustomerDemographics;
            }
            set
            {
                if ((value != null))
                {
                    this._CustomerDemographics = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<CustomerDemographics> _CustomerDemographics = new global::System.Collections.ObjectModel.Collection<CustomerDemographics>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Employees 的注释。
    /// </summary>
    /// <KeyProperties>
    /// EmployeeID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("EmployeeID")]
    public partial class Employees
    {
        /// <summary>
        /// 创建新的 Employees 对象。
        /// </summary>
        /// <param name="employeeID">EmployeeID 的初始值。</param>
        /// <param name="firstName">FirstName 的初始值。</param>
        /// <param name="lastName">LastName 的初始值。</param>
        public static Employees CreateEmployees(int employeeID, string firstName, string lastName)
        {
            Employees employees = new Employees();
            employees.EmployeeID = employeeID;
            employees.FirstName = firstName;
            employees.LastName = lastName;
            return employees;
        }
        /// <summary>
        /// 架构中不存在属性 Address 的注释。
        /// </summary>
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        /// <summary>
        /// 架构中不存在属性 BirthDate 的注释。
        /// </summary>
        public global::System.Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return this._BirthDate;
            }
            set
            {
                this.OnBirthDateChanging(value);
                this._BirthDate = value;
                this.OnBirthDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
        /// <summary>
        /// 架构中不存在属性 City 的注释。
        /// </summary>
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// 架构中不存在属性 Country 的注释。
        /// </summary>
        public string Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                this.OnCountryChanging(value);
                this._Country = value;
                this.OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        /// <summary>
        /// 架构中不存在属性 EmployeeID 的注释。
        /// </summary>
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                this.OnEmployeeIDChanging(value);
                this._EmployeeID = value;
                this.OnEmployeeIDChanged();
            }
        }
        private int _EmployeeID;
        partial void OnEmployeeIDChanging(int value);
        partial void OnEmployeeIDChanged();
        /// <summary>
        /// 架构中不存在属性 Extension 的注释。
        /// </summary>
        public string Extension
        {
            get
            {
                return this._Extension;
            }
            set
            {
                this.OnExtensionChanging(value);
                this._Extension = value;
                this.OnExtensionChanged();
            }
        }
        private string _Extension;
        partial void OnExtensionChanging(string value);
        partial void OnExtensionChanged();
        /// <summary>
        /// 架构中不存在属性 FirstName 的注释。
        /// </summary>
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                this.OnFirstNameChanging(value);
                this._FirstName = value;
                this.OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        /// <summary>
        /// 架构中不存在属性 HireDate 的注释。
        /// </summary>
        public global::System.Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return this._HireDate;
            }
            set
            {
                this.OnHireDateChanging(value);
                this._HireDate = value;
                this.OnHireDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
        /// <summary>
        /// 架构中不存在属性 HomePhone 的注释。
        /// </summary>
        public string HomePhone
        {
            get
            {
                return this._HomePhone;
            }
            set
            {
                this.OnHomePhoneChanging(value);
                this._HomePhone = value;
                this.OnHomePhoneChanged();
            }
        }
        private string _HomePhone;
        partial void OnHomePhoneChanging(string value);
        partial void OnHomePhoneChanged();
        /// <summary>
        /// 架构中不存在属性 LastName 的注释。
        /// </summary>
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                this.OnLastNameChanging(value);
                this._LastName = value;
                this.OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        /// <summary>
        /// 架构中不存在属性 Notes 的注释。
        /// </summary>
        public string Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                this.OnNotesChanging(value);
                this._Notes = value;
                this.OnNotesChanged();
            }
        }
        private string _Notes;
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        /// <summary>
        /// 架构中不存在属性 Photo 的注释。
        /// </summary>
        public byte[] Photo
        {
            get
            {
                if ((this._Photo != null))
                {
                    return ((byte[])(this._Photo.Clone()));
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnPhotoChanging(value);
                this._Photo = value;
                this.OnPhotoChanged();
            }
        }
        private byte[] _Photo;
        partial void OnPhotoChanging(byte[] value);
        partial void OnPhotoChanged();
        /// <summary>
        /// 架构中不存在属性 PhotoPath 的注释。
        /// </summary>
        public string PhotoPath
        {
            get
            {
                return this._PhotoPath;
            }
            set
            {
                this.OnPhotoPathChanging(value);
                this._PhotoPath = value;
                this.OnPhotoPathChanged();
            }
        }
        private string _PhotoPath;
        partial void OnPhotoPathChanging(string value);
        partial void OnPhotoPathChanged();
        /// <summary>
        /// 架构中不存在属性 PostalCode 的注释。
        /// </summary>
        public string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                this.OnPostalCodeChanging(value);
                this._PostalCode = value;
                this.OnPostalCodeChanged();
            }
        }
        private string _PostalCode;
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        /// <summary>
        /// 架构中不存在属性 Region 的注释。
        /// </summary>
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                this.OnRegionChanging(value);
                this._Region = value;
                this.OnRegionChanged();
            }
        }
        private string _Region;
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        /// <summary>
        /// 架构中不存在属性 Title 的注释。
        /// </summary>
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this._Title = value;
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        /// <summary>
        /// 架构中不存在属性 TitleOfCourtesy 的注释。
        /// </summary>
        public string TitleOfCourtesy
        {
            get
            {
                return this._TitleOfCourtesy;
            }
            set
            {
                this.OnTitleOfCourtesyChanging(value);
                this._TitleOfCourtesy = value;
                this.OnTitleOfCourtesyChanged();
            }
        }
        private string _TitleOfCourtesy;
        partial void OnTitleOfCourtesyChanging(string value);
        partial void OnTitleOfCourtesyChanged();
        /// <summary>
        /// 架构中不存在 Employees1 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Employees> Employees1
        {
            get
            {
                return this._Employees1;
            }
            set
            {
                if ((value != null))
                {
                    this._Employees1 = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Employees> _Employees1 = new global::System.Collections.ObjectModel.Collection<Employees>();
        /// <summary>
        /// 架构中不存在 Employees2 的注释。
        /// </summary>
        public Employees Employees2
        {
            get
            {
                return this._Employees2;
            }
            set
            {
                this._Employees2 = value;
            }
        }
        private Employees _Employees2;
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Orders> Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                if ((value != null))
                {
                    this._Orders = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Orders> _Orders = new global::System.Collections.ObjectModel.Collection<Orders>();
        /// <summary>
        /// 架构中不存在 Territories 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Territories> Territories
        {
            get
            {
                return this._Territories;
            }
            set
            {
                if ((value != null))
                {
                    this._Territories = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Territories> _Territories = new global::System.Collections.ObjectModel.Collection<Territories>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Order_Details 的注释。
    /// </summary>
    /// <KeyProperties>
    /// OrderID
    /// ProductID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("OrderID", "ProductID")]
    public partial class Order_Details
    {
        /// <summary>
        /// 创建新的 Order_Details 对象。
        /// </summary>
        /// <param name="discount">Discount 的初始值。</param>
        /// <param name="orderID">OrderID 的初始值。</param>
        /// <param name="productID">ProductID 的初始值。</param>
        /// <param name="quantity">Quantity 的初始值。</param>
        /// <param name="unitPrice">UnitPrice 的初始值。</param>
        public static Order_Details CreateOrder_Details(float discount, int orderID, int productID, short quantity, decimal unitPrice)
        {
            Order_Details order_Details = new Order_Details();
            order_Details.Discount = discount;
            order_Details.OrderID = orderID;
            order_Details.ProductID = productID;
            order_Details.Quantity = quantity;
            order_Details.UnitPrice = unitPrice;
            return order_Details;
        }
        /// <summary>
        /// 架构中不存在属性 Discount 的注释。
        /// </summary>
        public float Discount
        {
            get
            {
                return this._Discount;
            }
            set
            {
                this.OnDiscountChanging(value);
                this._Discount = value;
                this.OnDiscountChanged();
            }
        }
        private float _Discount;
        partial void OnDiscountChanging(float value);
        partial void OnDiscountChanged();
        /// <summary>
        /// 架构中不存在属性 OrderID 的注释。
        /// </summary>
        public int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnOrderIDChanging(value);
                this._OrderID = value;
                this.OnOrderIDChanged();
            }
        }
        private int _OrderID;
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        /// <summary>
        /// 架构中不存在属性 ProductID 的注释。
        /// </summary>
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnProductIDChanging(value);
                this._ProductID = value;
                this.OnProductIDChanged();
            }
        }
        private int _ProductID;
        partial void OnProductIDChanging(int value);
        partial void OnProductIDChanged();
        /// <summary>
        /// 架构中不存在属性 Quantity 的注释。
        /// </summary>
        public short Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnQuantityChanging(value);
                this._Quantity = value;
                this.OnQuantityChanged();
            }
        }
        private short _Quantity;
        partial void OnQuantityChanging(short value);
        partial void OnQuantityChanged();
        /// <summary>
        /// 架构中不存在属性 UnitPrice 的注释。
        /// </summary>
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                this.OnUnitPriceChanging(value);
                this._UnitPrice = value;
                this.OnUnitPriceChanged();
            }
        }
        private decimal _UnitPrice;
        partial void OnUnitPriceChanging(decimal value);
        partial void OnUnitPriceChanged();
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public Orders Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                this._Orders = value;
            }
        }
        private Orders _Orders;
        /// <summary>
        /// 架构中不存在 Products 的注释。
        /// </summary>
        public Products Products
        {
            get
            {
                return this._Products;
            }
            set
            {
                this._Products = value;
            }
        }
        private Products _Products;
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Orders 的注释。
    /// </summary>
    /// <KeyProperties>
    /// OrderID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("OrderID")]
    public partial class Orders
    {
        /// <summary>
        /// 创建新的 Orders 对象。
        /// </summary>
        /// <param name="orderID">OrderID 的初始值。</param>
        public static Orders CreateOrders(int orderID)
        {
            Orders orders = new Orders();
            orders.OrderID = orderID;
            return orders;
        }
        /// <summary>
        /// 架构中不存在属性 Freight 的注释。
        /// </summary>
        public global::System.Nullable<decimal> Freight
        {
            get
            {
                return this._Freight;
            }
            set
            {
                this.OnFreightChanging(value);
                this._Freight = value;
                this.OnFreightChanged();
            }
        }
        private global::System.Nullable<decimal> _Freight;
        partial void OnFreightChanging(global::System.Nullable<decimal> value);
        partial void OnFreightChanged();
        /// <summary>
        /// 架构中不存在属性 OrderDate 的注释。
        /// </summary>
        public global::System.Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return this._OrderDate;
            }
            set
            {
                this.OnOrderDateChanging(value);
                this._OrderDate = value;
                this.OnOrderDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();
        /// <summary>
        /// 架构中不存在属性 OrderID 的注释。
        /// </summary>
        public int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnOrderIDChanging(value);
                this._OrderID = value;
                this.OnOrderIDChanged();
            }
        }
        private int _OrderID;
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        /// <summary>
        /// 架构中不存在属性 RequiredDate 的注释。
        /// </summary>
        public global::System.Nullable<global::System.DateTime> RequiredDate
        {
            get
            {
                return this._RequiredDate;
            }
            set
            {
                this.OnRequiredDateChanging(value);
                this._RequiredDate = value;
                this.OnRequiredDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _RequiredDate;
        partial void OnRequiredDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnRequiredDateChanged();
        /// <summary>
        /// 架构中不存在属性 ShipAddress 的注释。
        /// </summary>
        public string ShipAddress
        {
            get
            {
                return this._ShipAddress;
            }
            set
            {
                this.OnShipAddressChanging(value);
                this._ShipAddress = value;
                this.OnShipAddressChanged();
            }
        }
        private string _ShipAddress;
        partial void OnShipAddressChanging(string value);
        partial void OnShipAddressChanged();
        /// <summary>
        /// 架构中不存在属性 ShipCity 的注释。
        /// </summary>
        public string ShipCity
        {
            get
            {
                return this._ShipCity;
            }
            set
            {
                this.OnShipCityChanging(value);
                this._ShipCity = value;
                this.OnShipCityChanged();
            }
        }
        private string _ShipCity;
        partial void OnShipCityChanging(string value);
        partial void OnShipCityChanged();
        /// <summary>
        /// 架构中不存在属性 ShipCountry 的注释。
        /// </summary>
        public string ShipCountry
        {
            get
            {
                return this._ShipCountry;
            }
            set
            {
                this.OnShipCountryChanging(value);
                this._ShipCountry = value;
                this.OnShipCountryChanged();
            }
        }
        private string _ShipCountry;
        partial void OnShipCountryChanging(string value);
        partial void OnShipCountryChanged();
        /// <summary>
        /// 架构中不存在属性 ShipName 的注释。
        /// </summary>
        public string ShipName
        {
            get
            {
                return this._ShipName;
            }
            set
            {
                this.OnShipNameChanging(value);
                this._ShipName = value;
                this.OnShipNameChanged();
            }
        }
        private string _ShipName;
        partial void OnShipNameChanging(string value);
        partial void OnShipNameChanged();
        /// <summary>
        /// 架构中不存在属性 ShippedDate 的注释。
        /// </summary>
        public global::System.Nullable<global::System.DateTime> ShippedDate
        {
            get
            {
                return this._ShippedDate;
            }
            set
            {
                this.OnShippedDateChanging(value);
                this._ShippedDate = value;
                this.OnShippedDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _ShippedDate;
        partial void OnShippedDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnShippedDateChanged();
        /// <summary>
        /// 架构中不存在属性 ShipPostalCode 的注释。
        /// </summary>
        public string ShipPostalCode
        {
            get
            {
                return this._ShipPostalCode;
            }
            set
            {
                this.OnShipPostalCodeChanging(value);
                this._ShipPostalCode = value;
                this.OnShipPostalCodeChanged();
            }
        }
        private string _ShipPostalCode;
        partial void OnShipPostalCodeChanging(string value);
        partial void OnShipPostalCodeChanged();
        /// <summary>
        /// 架构中不存在属性 ShipRegion 的注释。
        /// </summary>
        public string ShipRegion
        {
            get
            {
                return this._ShipRegion;
            }
            set
            {
                this.OnShipRegionChanging(value);
                this._ShipRegion = value;
                this.OnShipRegionChanged();
            }
        }
        private string _ShipRegion;
        partial void OnShipRegionChanging(string value);
        partial void OnShipRegionChanged();
        /// <summary>
        /// 架构中不存在 Customers 的注释。
        /// </summary>
        public Customers Customers
        {
            get
            {
                return this._Customers;
            }
            set
            {
                this._Customers = value;
            }
        }
        private Customers _Customers;
        /// <summary>
        /// 架构中不存在 Employees 的注释。
        /// </summary>
        public Employees Employees
        {
            get
            {
                return this._Employees;
            }
            set
            {
                this._Employees = value;
            }
        }
        private Employees _Employees;
        /// <summary>
        /// 架构中不存在 Order_Details 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Order_Details> Order_Details
        {
            get
            {
                return this._Order_Details;
            }
            set
            {
                if ((value != null))
                {
                    this._Order_Details = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Order_Details> _Order_Details = new global::System.Collections.ObjectModel.Collection<Order_Details>();
        /// <summary>
        /// 架构中不存在 Shippers 的注释。
        /// </summary>
        public Shippers Shippers
        {
            get
            {
                return this._Shippers;
            }
            set
            {
                this._Shippers = value;
            }
        }
        private Shippers _Shippers;
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Products 的注释。
    /// </summary>
    /// <KeyProperties>
    /// ProductID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("ProductID")]
    public partial class Products
    {
        /// <summary>
        /// 创建新的 Products 对象。
        /// </summary>
        /// <param name="discontinued">Discontinued 的初始值。</param>
        /// <param name="productID">ProductID 的初始值。</param>
        /// <param name="productName">ProductName 的初始值。</param>
        public static Products CreateProducts(bool discontinued, int productID, string productName)
        {
            Products products = new Products();
            products.Discontinued = discontinued;
            products.ProductID = productID;
            products.ProductName = productName;
            return products;
        }
        /// <summary>
        /// 架构中不存在属性 Discontinued 的注释。
        /// </summary>
        public bool Discontinued
        {
            get
            {
                return this._Discontinued;
            }
            set
            {
                this.OnDiscontinuedChanging(value);
                this._Discontinued = value;
                this.OnDiscontinuedChanged();
            }
        }
        private bool _Discontinued;
        partial void OnDiscontinuedChanging(bool value);
        partial void OnDiscontinuedChanged();
        /// <summary>
        /// 架构中不存在属性 ProductID 的注释。
        /// </summary>
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnProductIDChanging(value);
                this._ProductID = value;
                this.OnProductIDChanged();
            }
        }
        private int _ProductID;
        partial void OnProductIDChanging(int value);
        partial void OnProductIDChanged();
        /// <summary>
        /// 架构中不存在属性 ProductName 的注释。
        /// </summary>
        public string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                this.OnProductNameChanging(value);
                this._ProductName = value;
                this.OnProductNameChanged();
            }
        }
        private string _ProductName;
        partial void OnProductNameChanging(string value);
        partial void OnProductNameChanged();
        /// <summary>
        /// 架构中不存在属性 QuantityPerUnit 的注释。
        /// </summary>
        public string QuantityPerUnit
        {
            get
            {
                return this._QuantityPerUnit;
            }
            set
            {
                this.OnQuantityPerUnitChanging(value);
                this._QuantityPerUnit = value;
                this.OnQuantityPerUnitChanged();
            }
        }
        private string _QuantityPerUnit;
        partial void OnQuantityPerUnitChanging(string value);
        partial void OnQuantityPerUnitChanged();
        /// <summary>
        /// 架构中不存在属性 ReorderLevel 的注释。
        /// </summary>
        public global::System.Nullable<short> ReorderLevel
        {
            get
            {
                return this._ReorderLevel;
            }
            set
            {
                this.OnReorderLevelChanging(value);
                this._ReorderLevel = value;
                this.OnReorderLevelChanged();
            }
        }
        private global::System.Nullable<short> _ReorderLevel;
        partial void OnReorderLevelChanging(global::System.Nullable<short> value);
        partial void OnReorderLevelChanged();
        /// <summary>
        /// 架构中不存在属性 UnitPrice 的注释。
        /// </summary>
        public global::System.Nullable<decimal> UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                this.OnUnitPriceChanging(value);
                this._UnitPrice = value;
                this.OnUnitPriceChanged();
            }
        }
        private global::System.Nullable<decimal> _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Nullable<decimal> value);
        partial void OnUnitPriceChanged();
        /// <summary>
        /// 架构中不存在属性 UnitsInStock 的注释。
        /// </summary>
        public global::System.Nullable<short> UnitsInStock
        {
            get
            {
                return this._UnitsInStock;
            }
            set
            {
                this.OnUnitsInStockChanging(value);
                this._UnitsInStock = value;
                this.OnUnitsInStockChanged();
            }
        }
        private global::System.Nullable<short> _UnitsInStock;
        partial void OnUnitsInStockChanging(global::System.Nullable<short> value);
        partial void OnUnitsInStockChanged();
        /// <summary>
        /// 架构中不存在属性 UnitsOnOrder 的注释。
        /// </summary>
        public global::System.Nullable<short> UnitsOnOrder
        {
            get
            {
                return this._UnitsOnOrder;
            }
            set
            {
                this.OnUnitsOnOrderChanging(value);
                this._UnitsOnOrder = value;
                this.OnUnitsOnOrderChanged();
            }
        }
        private global::System.Nullable<short> _UnitsOnOrder;
        partial void OnUnitsOnOrderChanging(global::System.Nullable<short> value);
        partial void OnUnitsOnOrderChanged();
        /// <summary>
        /// 架构中不存在 Categories 的注释。
        /// </summary>
        public Categories Categories
        {
            get
            {
                return this._Categories;
            }
            set
            {
                this._Categories = value;
            }
        }
        private Categories _Categories;
        /// <summary>
        /// 架构中不存在 Order_Details 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Order_Details> Order_Details
        {
            get
            {
                return this._Order_Details;
            }
            set
            {
                if ((value != null))
                {
                    this._Order_Details = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Order_Details> _Order_Details = new global::System.Collections.ObjectModel.Collection<Order_Details>();
        /// <summary>
        /// 架构中不存在 Suppliers 的注释。
        /// </summary>
        public Suppliers Suppliers
        {
            get
            {
                return this._Suppliers;
            }
            set
            {
                this._Suppliers = value;
            }
        }
        private Suppliers _Suppliers;
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Region 的注释。
    /// </summary>
    /// <KeyProperties>
    /// RegionID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("RegionID")]
    public partial class Region
    {
        /// <summary>
        /// 创建新的 Region 对象。
        /// </summary>
        /// <param name="regionDescription">RegionDescription 的初始值。</param>
        /// <param name="regionID">RegionID 的初始值。</param>
        public static Region CreateRegion(string regionDescription, int regionID)
        {
            Region region = new Region();
            region.RegionDescription = regionDescription;
            region.RegionID = regionID;
            return region;
        }
        /// <summary>
        /// 架构中不存在属性 RegionDescription 的注释。
        /// </summary>
        public string RegionDescription
        {
            get
            {
                return this._RegionDescription;
            }
            set
            {
                this.OnRegionDescriptionChanging(value);
                this._RegionDescription = value;
                this.OnRegionDescriptionChanged();
            }
        }
        private string _RegionDescription;
        partial void OnRegionDescriptionChanging(string value);
        partial void OnRegionDescriptionChanged();
        /// <summary>
        /// 架构中不存在属性 RegionID 的注释。
        /// </summary>
        public int RegionID
        {
            get
            {
                return this._RegionID;
            }
            set
            {
                this.OnRegionIDChanging(value);
                this._RegionID = value;
                this.OnRegionIDChanged();
            }
        }
        private int _RegionID;
        partial void OnRegionIDChanging(int value);
        partial void OnRegionIDChanged();
        /// <summary>
        /// 架构中不存在 Territories 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Territories> Territories
        {
            get
            {
                return this._Territories;
            }
            set
            {
                if ((value != null))
                {
                    this._Territories = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Territories> _Territories = new global::System.Collections.ObjectModel.Collection<Territories>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Shippers 的注释。
    /// </summary>
    /// <KeyProperties>
    /// ShipperID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("ShipperID")]
    public partial class Shippers
    {
        /// <summary>
        /// 创建新的 Shippers 对象。
        /// </summary>
        /// <param name="companyName">CompanyName 的初始值。</param>
        /// <param name="shipperID">ShipperID 的初始值。</param>
        public static Shippers CreateShippers(string companyName, int shipperID)
        {
            Shippers shippers = new Shippers();
            shippers.CompanyName = companyName;
            shippers.ShipperID = shipperID;
            return shippers;
        }
        /// <summary>
        /// 架构中不存在属性 CompanyName 的注释。
        /// </summary>
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
        /// <summary>
        /// 架构中不存在属性 Phone 的注释。
        /// </summary>
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                this.OnPhoneChanging(value);
                this._Phone = value;
                this.OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        /// <summary>
        /// 架构中不存在属性 ShipperID 的注释。
        /// </summary>
        public int ShipperID
        {
            get
            {
                return this._ShipperID;
            }
            set
            {
                this.OnShipperIDChanging(value);
                this._ShipperID = value;
                this.OnShipperIDChanged();
            }
        }
        private int _ShipperID;
        partial void OnShipperIDChanging(int value);
        partial void OnShipperIDChanged();
        /// <summary>
        /// 架构中不存在 Orders 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Orders> Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                if ((value != null))
                {
                    this._Orders = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Orders> _Orders = new global::System.Collections.ObjectModel.Collection<Orders>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Suppliers 的注释。
    /// </summary>
    /// <KeyProperties>
    /// SupplierID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("SupplierID")]
    public partial class Suppliers
    {
        /// <summary>
        /// 创建新的 Suppliers 对象。
        /// </summary>
        /// <param name="companyName">CompanyName 的初始值。</param>
        /// <param name="supplierID">SupplierID 的初始值。</param>
        public static Suppliers CreateSuppliers(string companyName, int supplierID)
        {
            Suppliers suppliers = new Suppliers();
            suppliers.CompanyName = companyName;
            suppliers.SupplierID = supplierID;
            return suppliers;
        }
        /// <summary>
        /// 架构中不存在属性 Address 的注释。
        /// </summary>
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        /// <summary>
        /// 架构中不存在属性 City 的注释。
        /// </summary>
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// 架构中不存在属性 CompanyName 的注释。
        /// </summary>
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
        /// <summary>
        /// 架构中不存在属性 ContactName 的注释。
        /// </summary>
        public string ContactName
        {
            get
            {
                return this._ContactName;
            }
            set
            {
                this.OnContactNameChanging(value);
                this._ContactName = value;
                this.OnContactNameChanged();
            }
        }
        private string _ContactName;
        partial void OnContactNameChanging(string value);
        partial void OnContactNameChanged();
        /// <summary>
        /// 架构中不存在属性 ContactTitle 的注释。
        /// </summary>
        public string ContactTitle
        {
            get
            {
                return this._ContactTitle;
            }
            set
            {
                this.OnContactTitleChanging(value);
                this._ContactTitle = value;
                this.OnContactTitleChanged();
            }
        }
        private string _ContactTitle;
        partial void OnContactTitleChanging(string value);
        partial void OnContactTitleChanged();
        /// <summary>
        /// 架构中不存在属性 Country 的注释。
        /// </summary>
        public string Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                this.OnCountryChanging(value);
                this._Country = value;
                this.OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        /// <summary>
        /// 架构中不存在属性 Fax 的注释。
        /// </summary>
        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                this.OnFaxChanging(value);
                this._Fax = value;
                this.OnFaxChanged();
            }
        }
        private string _Fax;
        partial void OnFaxChanging(string value);
        partial void OnFaxChanged();
        /// <summary>
        /// 架构中不存在属性 HomePage 的注释。
        /// </summary>
        public string HomePage
        {
            get
            {
                return this._HomePage;
            }
            set
            {
                this.OnHomePageChanging(value);
                this._HomePage = value;
                this.OnHomePageChanged();
            }
        }
        private string _HomePage;
        partial void OnHomePageChanging(string value);
        partial void OnHomePageChanged();
        /// <summary>
        /// 架构中不存在属性 Phone 的注释。
        /// </summary>
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                this.OnPhoneChanging(value);
                this._Phone = value;
                this.OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        /// <summary>
        /// 架构中不存在属性 PostalCode 的注释。
        /// </summary>
        public string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                this.OnPostalCodeChanging(value);
                this._PostalCode = value;
                this.OnPostalCodeChanged();
            }
        }
        private string _PostalCode;
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        /// <summary>
        /// 架构中不存在属性 Region 的注释。
        /// </summary>
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                this.OnRegionChanging(value);
                this._Region = value;
                this.OnRegionChanged();
            }
        }
        private string _Region;
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        /// <summary>
        /// 架构中不存在属性 SupplierID 的注释。
        /// </summary>
        public int SupplierID
        {
            get
            {
                return this._SupplierID;
            }
            set
            {
                this.OnSupplierIDChanging(value);
                this._SupplierID = value;
                this.OnSupplierIDChanged();
            }
        }
        private int _SupplierID;
        partial void OnSupplierIDChanging(int value);
        partial void OnSupplierIDChanged();
        /// <summary>
        /// 架构中不存在 Products 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Products> Products
        {
            get
            {
                return this._Products;
            }
            set
            {
                if ((value != null))
                {
                    this._Products = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Products> _Products = new global::System.Collections.ObjectModel.Collection<Products>();
    }
    /// <summary>
    /// 架构中不存在 NorthwindModel.Territories 的注释。
    /// </summary>
    /// <KeyProperties>
    /// TerritoryID
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("TerritoryID")]
    public partial class Territories
    {
        /// <summary>
        /// 创建新的 Territories 对象。
        /// </summary>
        /// <param name="territoryDescription">TerritoryDescription 的初始值。</param>
        /// <param name="territoryID">TerritoryID 的初始值。</param>
        public static Territories CreateTerritories(string territoryDescription, string territoryID)
        {
            Territories territories = new Territories();
            territories.TerritoryDescription = territoryDescription;
            territories.TerritoryID = territoryID;
            return territories;
        }
        /// <summary>
        /// 架构中不存在属性 TerritoryDescription 的注释。
        /// </summary>
        public string TerritoryDescription
        {
            get
            {
                return this._TerritoryDescription;
            }
            set
            {
                this.OnTerritoryDescriptionChanging(value);
                this._TerritoryDescription = value;
                this.OnTerritoryDescriptionChanged();
            }
        }
        private string _TerritoryDescription;
        partial void OnTerritoryDescriptionChanging(string value);
        partial void OnTerritoryDescriptionChanged();
        /// <summary>
        /// 架构中不存在属性 TerritoryID 的注释。
        /// </summary>
        public string TerritoryID
        {
            get
            {
                return this._TerritoryID;
            }
            set
            {
                this.OnTerritoryIDChanging(value);
                this._TerritoryID = value;
                this.OnTerritoryIDChanged();
            }
        }
        private string _TerritoryID;
        partial void OnTerritoryIDChanging(string value);
        partial void OnTerritoryIDChanged();
        /// <summary>
        /// 架构中不存在 Region 的注释。
        /// </summary>
        public Region Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                this._Region = value;
            }
        }
        private Region _Region;
        /// <summary>
        /// 架构中不存在 Employees 的注释。
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Employees> Employees
        {
            get
            {
                return this._Employees;
            }
            set
            {
                if ((value != null))
                {
                    this._Employees = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Employees> _Employees = new global::System.Collections.ObjectModel.Collection<Employees>();
    }
}
